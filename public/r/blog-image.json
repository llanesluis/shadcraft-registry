{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "blog-image",
  "type": "registry:component",
  "title": "Blog Image",
  "description": "A component that displays an inline or full-width image with an optional caption. This component makes blog articles more engaging and visually appealing.",
  "files": [
    {
      "path": "components/blog-image.tsx",
      "content": "import { Link2, LucideIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction BlogImage({ className, ...props }: React.ComponentProps<\"figure\">) {\n  return (\n    <figure\n      data-slot=\"blog-image\"\n      className={cn(\"flex flex-col gap-3.5 py-5 lg:py-9\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction BlogImageImage({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"blog-image-image\"\n      className={cn(\n        \"overflow-hidden rounded-2xl\",\n        // image defaults\n        \"[&_img:not([class*='aspect-'])]:aspect-auto [&_img:not([class*='size-'])]:h-auto [&_img:not([class*='size-'])]:w-full\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction BlogImageCaption({\n  icon: Icon = Link2,\n  showIcon = true,\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"figcaption\"> & { icon?: LucideIcon; showIcon?: boolean }) {\n  return (\n    <figcaption\n      data-slot=\"blog-image-caption\"\n      className={cn(\n        \"text-muted-foreground flex items-center gap-1.5 font-sans text-sm leading-5\",\n        className\n      )}\n      {...props}\n    >\n      {showIcon && <Icon className=\"text-muted-foreground size-4\" aria-hidden=\"true\" />}\n      {children}\n    </figcaption>\n  );\n}\n\nfunction BlogImageAttribution({\n  author,\n  authorHref,\n  source,\n  sourceHref,\n  prefix = \"Photo by\",\n  separator = \"on\",\n}: {\n  author: string;\n  authorHref?: string;\n  source: string;\n  sourceHref?: string;\n  prefix?: string;\n  separator?: string;\n}) {\n  const normalizedPrefix = prefix.trim();\n  const normalizedSeparator = separator.trim();\n  const normalizedAuthor = author.trim();\n  const normalizedSource = source.trim();\n  return (\n    <span data-slot=\"blog-image-attribution\" className=\"text-muted-foreground\">\n      <span>{normalizedPrefix}</span>{\" \"}\n      {authorHref ? (\n        <a className=\"underline\" href={authorHref} target=\"_blank\" rel=\"noopener noreferrer\">\n          {normalizedAuthor}\n        </a>\n      ) : (\n        <span>{normalizedAuthor}</span>\n      )}{\" \"}\n      <span>{normalizedSeparator}</span>{\" \"}\n      {sourceHref ? (\n        <a className=\"underline\" href={sourceHref} target=\"_blank\" rel=\"noopener noreferrer\">\n          {normalizedSource}\n        </a>\n      ) : (\n        <span>{normalizedSource}</span>\n      )}\n    </span>\n  );\n}\n\nexport { BlogImage, BlogImageAttribution, BlogImageCaption, BlogImageImage };\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "bundle": "pro-marketing"
  }
}