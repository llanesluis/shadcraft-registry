{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-stack",
  "type": "registry:component",
  "title": "Feature Stack",
  "description": "A component that arranges an icon, header, body text, and CTA in different layout styles. This component makes features clear and actionable.",
  "registryDependencies": [
    "https://shadcraft-registry.vercel.app/r/featured-icon.json"
  ],
  "files": [
    {
      "path": "components/feature-stack.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\nimport { FeaturedIcon } from \"@/components/ui/featured-icon\";\n\ntype FeatureStackContextValue = {\n  size: \"sm\" | \"md\";\n  alignment: \"left\" | \"center\";\n};\n\nconst FeatureStackContext = React.createContext<FeatureStackContextValue>({\n  alignment: \"center\",\n  size: \"md\",\n});\n\nfunction useFeatureStackContext(): FeatureStackContextValue {\n  const context = React.useContext(FeatureStackContext);\n  if (!context) {\n    throw new Error(\"FeatureStack subcomponents must be used within a <FeatureStack> parent.\");\n  }\n  return context;\n}\n\nfunction FeatureStack({\n  size = \"md\",\n  alignment = \"center\",\n  className,\n  ...props\n}: React.ComponentProps<\"div\"> & { size?: \"sm\" | \"md\"; alignment?: \"left\" | \"center\" }) {\n  return (\n    <FeatureStackContext.Provider value={{ size, alignment }}>\n      <div\n        data-slot=\"feature-stack\"\n        data-size={size}\n        data-alignment={alignment}\n        className={cn(\n          \"group/feature-stack flex max-w-xl flex-col gap-4\",\n          alignment === \"left\" && \"items-start justify-start\",\n          alignment === \"center\" && \"items-center justify-start text-center\",\n          className\n        )}\n        {...props}\n      />\n    </FeatureStackContext.Provider>\n  );\n}\n\nfunction FeatureStackIcon({\n  className,\n  icon,\n  variant = \"default\",\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  variant?: \"default\" | \"featured\";\n  icon: React.ReactElement;\n}) {\n  const { size } = useFeatureStackContext();\n  return (\n    <div\n      data-slot=\"feature-stack-icon\"\n      data-variant={variant}\n      className={cn(\n        \"[&_svg:not([class*='text-'])]:text-primary shrink-0 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n        className\n      )}\n      {...props}\n    >\n      {variant === \"featured\" && (\n        <FeaturedIcon variant=\"circular\" size={size === \"md\" ? \"lg\" : \"md\"}>\n          {icon}\n        </FeaturedIcon>\n      )}\n\n      {variant === \"default\" && (\n        <div\n          className={cn(\n            size == \"sm\" && \"[&_svg:not([class*='size-'])]:size-6\",\n            size == \"md\" && \"[&_svg:not([class*='size-'])]:size-7\"\n          )}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction FeatureStackHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"feature-stack-header\"\n      className={cn(\"flex flex-col gap-1\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction FeatureStackTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  const { size } = useFeatureStackContext();\n  return (\n    <div\n      data-slot=\"feature-stack-title\"\n      className={cn(\n        \"text-foreground font-sans tracking-[-0.6px]\",\n        size == \"sm\" && \"text-base leading-6 font-medium\",\n        size == \"md\" && \"text-xl leading-8 font-semibold\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction FeatureStackBody({ className, ...props }: React.ComponentProps<\"div\">) {\n  const { size } = useFeatureStackContext();\n  return (\n    <div\n      data-slot=\"feature-stack-body\"\n      className={cn(\n        \"text-muted-foreground font-sans font-normal text-pretty\",\n        size == \"sm\" && \"text-sm leading-5\",\n        size == \"md\" && \"text-lg leading-8\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction FeatureStackContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"feature-stack-content\" className={cn(\"w-full\", className)} {...props} />;\n}\n\nfunction FeatureStackAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"feature-stack-action\" className={cn(\"w-full\", className)} {...props} />;\n}\n\nexport {\n  FeatureStack,\n  FeatureStackAction,\n  FeatureStackBody,\n  FeatureStackContent,\n  FeatureStackHeader,\n  FeatureStackIcon,\n  FeatureStackTitle,\n};\n",
      "type": "registry:component",
      "target": "components/shadcraft/feature-stack.tsx"
    }
  ],
  "meta": {
    "bundle": "pro-marketing"
  }
}