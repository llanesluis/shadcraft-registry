{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-stack",
  "type": "registry:component",
  "title": "Feature Stack",
  "description": "A component that arranges an icon, header, body text, and CTA in different layout styles. This component makes features clear and actionable.",
  "registryDependencies": [
    "https://shadcraft-registry.vercel.app/r/featured-icon.json"
  ],
  "files": [
    {
      "path": "src/registry/pro-marketing/components/feature-stack.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { FeaturedIcon } from \"@/registry/pro-marketing/components/featured-icon\";\r\n\r\ntype FeatureStackContextValue = {\r\n  size: \"sm\" | \"md\";\r\n  alignment: \"left\" | \"center\";\r\n};\r\n\r\nconst FeatureStackContext = React.createContext<FeatureStackContextValue>({\r\n  alignment: \"center\",\r\n  size: \"md\",\r\n});\r\n\r\nfunction useFeatureStackContext(): FeatureStackContextValue {\r\n  const context = React.useContext(FeatureStackContext);\r\n  if (!context) {\r\n    throw new Error(\"FeatureStack subcomponents must be used within a <FeatureStack> parent.\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction FeatureStack({\r\n  size = \"md\",\r\n  alignment = \"center\",\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\"> & { size?: \"sm\" | \"md\"; alignment?: \"left\" | \"center\" }) {\r\n  return (\r\n    <FeatureStackContext.Provider value={{ size, alignment }}>\r\n      <div\r\n        data-slot=\"feature-stack\"\r\n        data-size={size}\r\n        data-alignment={alignment}\r\n        className={cn(\r\n          \"group/feature-stack flex max-w-xl flex-col gap-4\",\r\n          alignment === \"left\" && \"items-start justify-start\",\r\n          alignment === \"center\" && \"items-center justify-start text-center\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </FeatureStackContext.Provider>\r\n  );\r\n}\r\n\r\nfunction FeatureStackIcon({\r\n  className,\r\n  icon,\r\n  variant = \"default\",\r\n  ...props\r\n}: React.ComponentProps<\"div\"> & {\r\n  variant?: \"default\" | \"featured\";\r\n  icon: React.ReactElement;\r\n}) {\r\n  const { size } = useFeatureStackContext();\r\n  return (\r\n    <div\r\n      data-slot=\"feature-stack-icon\"\r\n      data-variant={variant}\r\n      className={cn(\r\n        \"[&_svg:not([class*='text-'])]:text-primary shrink-0 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {variant === \"featured\" && (\r\n        <FeaturedIcon variant=\"circular\" size={size === \"md\" ? \"lg\" : \"md\"}>\r\n          {icon}\r\n        </FeaturedIcon>\r\n      )}\r\n\r\n      {variant === \"default\" && (\r\n        <div\r\n          className={cn(\r\n            size == \"sm\" && \"[&_svg:not([class*='size-'])]:size-6\",\r\n            size == \"md\" && \"[&_svg:not([class*='size-'])]:size-7\"\r\n          )}\r\n        >\r\n          {icon}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FeatureStackHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"feature-stack-header\"\r\n      className={cn(\"flex flex-col gap-1\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FeatureStackTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  const { size } = useFeatureStackContext();\r\n  return (\r\n    <div\r\n      data-slot=\"feature-stack-title\"\r\n      className={cn(\r\n        \"text-foreground font-sans tracking-[-0.6px]\",\r\n        size == \"sm\" && \"text-base leading-6 font-medium\",\r\n        size == \"md\" && \"text-xl leading-8 font-semibold\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FeatureStackBody({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  const { size } = useFeatureStackContext();\r\n  return (\r\n    <div\r\n      data-slot=\"feature-stack-body\"\r\n      className={cn(\r\n        \"text-muted-foreground font-sans font-normal text-pretty\",\r\n        size == \"sm\" && \"text-sm leading-5\",\r\n        size == \"md\" && \"text-lg leading-8\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nfunction FeatureStackContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return <div data-slot=\"feature-stack-content\" className={cn(\"w-full\", className)} {...props} />;\r\n}\r\n\r\nfunction FeatureStackAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return <div data-slot=\"feature-stack-action\" className={cn(\"w-full\", className)} {...props} />;\r\n}\r\n\r\nexport {\r\n  FeatureStack,\r\n  FeatureStackAction,\r\n  FeatureStackBody,\r\n  FeatureStackContent,\r\n  FeatureStackHeader,\r\n  FeatureStackIcon,\r\n  FeatureStackTitle,\r\n};\r\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "bundle": "pro-marketing"
  }
}